# Generated by Django 5.2.4 on 2025-08-02 05:57

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Carrera',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ConfiguracionInstitucion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_institucion', models.CharField(help_text='El nombre oficial de la institución.', max_length=255)),
                ('logo', models.ImageField(help_text='Logo que aparecerá en las credenciales y reportes.', upload_to='configuracion/')),
                ('direccion', models.CharField(blank=True, help_text='Dirección física de la institución.', max_length=255)),
                ('telefono', models.CharField(blank=True, help_text='Teléfono de contacto.', max_length=20)),
                ('email_contacto', models.EmailField(blank=True, help_text='Email de contacto oficial.', max_length=254)),
            ],
            options={
                'verbose_name': 'Configuración de la Institución',
                'verbose_name_plural': 'Configuración de la Institución',
            },
        ),
        migrations.CreateModel(
            name='Especialidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='FranjaHoraria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('turno', models.CharField(choices=[('MANANA', 'Mañana'), ('TARDE', 'Tarde'), ('NOCHE', 'Noche')], max_length=10)),
                ('hora_inicio', models.TimeField()),
                ('hora_fin', models.TimeField()),
            ],
            options={
                'verbose_name': 'Franja Horaria',
                'verbose_name_plural': 'Franjas Horarias',
                'ordering': ['hora_inicio'],
            },
        ),
        migrations.CreateModel(
            name='Grupo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Ej: Grupo A, Grupo B, Grupo C', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Semestre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Ej: Semestre 2025-A', max_length=100)),
                ('tipo', models.CharField(choices=[('IMPAR', 'Impar (A)'), ('PAR', 'Par (B)')], default='IMPAR', max_length=10)),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('estado', models.CharField(choices=[('PLANIFICACION', 'En Planificación'), ('ACTIVO', 'Activo'), ('CERRADO', 'Cerrado')], default='PLANIFICACION', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='TipoDocumento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Docente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('dni', models.CharField(db_index=True, max_length=8, unique=True)),
                ('disponibilidad', models.CharField(choices=[('COMPLETO', 'Tiempo Completo (Mañana y Tarde)'), ('MANANA', 'Solo Mañana'), ('TARDE', 'Solo Tarde')], default='COMPLETO', max_length=20)),
                ('id_qr', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('foto', models.ImageField(blank=True, default='fotos_docentes/placeholder.png', null=True, upload_to='fotos_docentes/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('especialidades', models.ManyToManyField(related_name='docentes', to='core.especialidad')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Administrador',
            fields=[
            ],
            options={
                'verbose_name': 'Administrador',
                'verbose_name_plural': 'Administradores',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('core.docente',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PersonalDocente',
            fields=[
            ],
            options={
                'verbose_name': 'Personal Docente',
                'verbose_name_plural': 'Personal Docente',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('core.docente',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AsistenciaDiaria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(auto_now_add=True)),
                ('hora_entrada', models.DateTimeField(auto_now_add=True)),
                ('foto_verificacion', models.ImageField(upload_to='verificacion_diaria/%Y/%m/%d/')),
                ('docente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('tipo_curso', models.CharField(choices=[('ESPECIALIDAD', 'Especialidad'), ('GENERAL', 'General')], default='ESPECIALIDAD', max_length=20)),
                ('semestre_cursado', models.IntegerField(blank=True, choices=[(1, 'Semestre I'), (2, 'Semestre II'), (3, 'Semestre III'), (4, 'Semestre IV'), (5, 'Semestre V'), (6, 'Semestre VI'), (7, 'Semestre VII'), (8, 'Semestre VIII'), (9, 'Semestre IX'), (10, 'Semestre X')], null=True)),
                ('horario_inicio', models.TimeField(blank=True, null=True)),
                ('horario_fin', models.TimeField(blank=True, null=True)),
                ('dia', models.CharField(blank=True, choices=[('Lunes', 'Lunes'), ('Martes', 'Martes'), ('Miércoles', 'Miércoles'), ('Jueves', 'Jueves'), ('Viernes', 'Viernes')], max_length=20, null=True)),
                ('duracion_bloques', models.IntegerField(default=2, help_text='Número de bloques de 50 minutos que dura el curso.')),
                ('carrera', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.carrera')),
                ('docente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('especialidad', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cursos', to='core.especialidad')),
                ('semestre', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cursos', to='core.semestre')),
            ],
        ),
        migrations.CreateModel(
            name='Asistencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(default=django.utils.timezone.now)),
                ('hora_entrada', models.DateTimeField(blank=True, null=True)),
                ('hora_salida', models.DateTimeField(blank=True, null=True)),
                ('hora_salida_permitida', models.DateTimeField(blank=True, help_text='Hora mínima a la que se puede marcar la salida.', null=True)),
                ('foto_entrada', models.ImageField(blank=True, null=True, upload_to='verificacion_cursos/entradas/%Y/%m/%d/')),
                ('foto_salida', models.ImageField(blank=True, null=True, upload_to='verificacion_cursos/salidas/%Y/%m/%d/')),
                ('docente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.curso')),
            ],
        ),
        migrations.AddField(
            model_name='especialidad',
            name='grupo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='especialidades', to='core.grupo'),
        ),
        migrations.CreateModel(
            name='DiaEspecial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(unique=True)),
                ('motivo', models.CharField(max_length=255)),
                ('tipo', models.CharField(choices=[('FERIADO', 'Feriado (No se labora)'), ('EVENTO', 'Evento Institucional (Se labora, sin clases)'), ('SUSPENSION', 'Suspensión de Clases')], max_length=20)),
                ('semestre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.semestre')),
            ],
        ),
        migrations.CreateModel(
            name='SolicitudIntercambio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('aprobado', 'Aprobado'), ('rechazado', 'Rechazado')], default='pendiente', max_length=20)),
                ('fecha_solicitud', models.DateTimeField(auto_now_add=True)),
                ('curso_destino', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solicitudes_destino', to='core.curso')),
                ('curso_solicitante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solicitudes_solicitante', to='core.curso')),
                ('docente_destino', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solicitudes_recibidas', to=settings.AUTH_USER_MODEL)),
                ('docente_solicitante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solicitudes_enviadas', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Documento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('fecha_subida', models.DateTimeField(auto_now_add=True)),
                ('fecha_vencimiento', models.DateField(blank=True, help_text='Opcional: Dejar en blanco si el documento no vence.', null=True)),
                ('estado', models.CharField(choices=[('RECIBIDO', 'Recibido'), ('EN_REVISION', 'En Revisión'), ('APROBADO', 'Aprobado'), ('OBSERVADO', 'Observado'), ('VENCIDO', 'Vencido')], default='RECIBIDO', max_length=20)),
                ('observaciones', models.TextField(blank=True, help_text='Notas internas para la administración.')),
                ('docente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos', to=settings.AUTH_USER_MODEL)),
                ('tipo_documento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tipodocumento')),
            ],
        ),
        migrations.CreateModel(
            name='VersionDocumento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archivo', models.FileField(upload_to='documentos/%Y/%m/%d/')),
                ('fecha_version', models.DateTimeField(auto_now_add=True)),
                ('numero_version', models.PositiveIntegerField(editable=False)),
                ('documento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versiones', to='core.documento')),
            ],
            options={
                'ordering': ['-fecha_version'],
            },
        ),
    ]
